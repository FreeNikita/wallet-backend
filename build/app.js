"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _express = _interopRequireDefault(require("express"));
var _mongoose = _interopRequireDefault(require("mongoose"));
var _dotenv = _interopRequireDefault(require("dotenv"));


var _apolloServerExpress = require("apollo-server-express");
var _graphQL = require("./graphQL");function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };} // graphQL

_dotenv.default.config();
const PORT = process.env.PORT || 8080;

const app = (0, _express.default)();

const server = new _apolloServerExpress.ApolloServer({
  typeDefs: _graphQL.typeDefs,
  resolvers: _graphQL.resolvers,
  // rootValue: root,
  introspection: true,
  playground: true,
  graphiql: true });


server.applyMiddleware({ app });

app.get('/*', (req, res) => {
  res.redirect('/graphql');
});

const listen = async () => {
  try {
    await _mongoose.default.connect(process.env.BD_HOST, {
      useNewUrlParser: true,
      useFindAndModify: false,
      useUnifiedTopology: true });


    app.listen(PORT, () => {
      console.log(`ðŸš€ Server ready at http://localhost:${PORT}${server.graphqlPath}`);
    });
  } catch (error) {
    console.log("Error Run Project: ", error);
  }
};

listen().catch(err => {
  console.error(err.message);
  process.exit(1);
});var _default =

app;exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9hcHAuanMiXSwibmFtZXMiOlsiZG90ZW52IiwiY29uZmlnIiwiUE9SVCIsInByb2Nlc3MiLCJlbnYiLCJhcHAiLCJzZXJ2ZXIiLCJBcG9sbG9TZXJ2ZXIiLCJ0eXBlRGVmcyIsInJlc29sdmVycyIsImludHJvc3BlY3Rpb24iLCJwbGF5Z3JvdW5kIiwiZ3JhcGhpcWwiLCJhcHBseU1pZGRsZXdhcmUiLCJnZXQiLCJyZXEiLCJyZXMiLCJyZWRpcmVjdCIsImxpc3RlbiIsIm1vbmdvb3NlIiwiY29ubmVjdCIsIkJEX0hPU1QiLCJ1c2VOZXdVcmxQYXJzZXIiLCJ1c2VGaW5kQW5kTW9kaWZ5IiwidXNlVW5pZmllZFRvcG9sb2d5IiwiY29uc29sZSIsImxvZyIsImdyYXBocWxQYXRoIiwiZXJyb3IiLCJjYXRjaCIsImVyciIsIm1lc3NhZ2UiLCJleGl0Il0sIm1hcHBpbmdzIjoib0dBQUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBLG9DLDhGQUZBOztBQUlBQSxnQkFBT0MsTUFBUDtBQUNBLE1BQU1DLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlGLElBQVosSUFBb0IsSUFBakM7O0FBRUEsTUFBTUcsR0FBRyxHQUFHLHVCQUFaOztBQUVBLE1BQU1DLE1BQU0sR0FBRyxJQUFJQyxpQ0FBSixDQUFpQjtBQUM1QkMsRUFBQUEsUUFBUSxFQUFSQSxpQkFENEI7QUFFNUJDLEVBQUFBLFNBQVMsRUFBVEEsa0JBRjRCO0FBRzVCO0FBQ0FDLEVBQUFBLGFBQWEsRUFBRSxJQUphO0FBSzVCQyxFQUFBQSxVQUFVLEVBQUUsSUFMZ0I7QUFNNUJDLEVBQUFBLFFBQVEsRUFBRSxJQU5rQixFQUFqQixDQUFmOzs7QUFTQU4sTUFBTSxDQUFDTyxlQUFQLENBQXVCLEVBQUVSLEdBQUYsRUFBdkI7O0FBRUFBLEdBQUcsQ0FBQ1MsR0FBSixDQUFRLElBQVIsRUFBYyxDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUN4QkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWEsVUFBYjtBQUNILENBRkQ7O0FBSUEsTUFBTUMsTUFBTSxHQUFHLFlBQVk7QUFDdkIsTUFBSTtBQUNBLFVBQU1DLGtCQUFTQyxPQUFULENBQWlCakIsT0FBTyxDQUFDQyxHQUFSLENBQVlpQixPQUE3QixFQUFzQztBQUN4Q0MsTUFBQUEsZUFBZSxFQUFFLElBRHVCO0FBRXhDQyxNQUFBQSxnQkFBZ0IsRUFBRSxLQUZzQjtBQUd4Q0MsTUFBQUEsa0JBQWtCLEVBQUUsSUFIb0IsRUFBdEMsQ0FBTjs7O0FBTUFuQixJQUFBQSxHQUFHLENBQUNhLE1BQUosQ0FBV2hCLElBQVgsRUFBaUIsTUFBTTtBQUNuQnVCLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHVDQUFzQ3hCLElBQUssR0FBRUksTUFBTSxDQUFDcUIsV0FBWSxFQUE3RTtBQUNILEtBRkQ7QUFHSCxHQVZELENBVUUsT0FBTUMsS0FBTixFQUFhO0FBQ1hILElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaLEVBQW1DRSxLQUFuQztBQUNIO0FBQ0osQ0FkRDs7QUFnQkFWLE1BQU0sR0FBR1csS0FBVCxDQUFlQyxHQUFHLElBQUk7QUFDbEJMLEVBQUFBLE9BQU8sQ0FBQ0csS0FBUixDQUFjRSxHQUFHLENBQUNDLE9BQWxCO0FBQ0E1QixFQUFBQSxPQUFPLENBQUM2QixJQUFSLENBQWEsQ0FBYjtBQUNILENBSEQsRTs7QUFLZTNCLEciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSc7XG5pbXBvcnQgZG90ZW52IGZyb20gJ2RvdGVudic7XG5cbi8vIGdyYXBoUUxcbmltcG9ydCB7IEFwb2xsb1NlcnZlciB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5pbXBvcnQgeyB0eXBlRGVmcywgcmVzb2x2ZXJzLCByb290IH0gZnJvbSAnLi9ncmFwaFFMJztcblxuZG90ZW52LmNvbmZpZygpXG5jb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA4MDgwXG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKVxuXG5jb25zdCBzZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHtcbiAgICB0eXBlRGVmcyxcbiAgICByZXNvbHZlcnMsXG4gICAgLy8gcm9vdFZhbHVlOiByb290LFxuICAgIGludHJvc3BlY3Rpb246IHRydWUsXG4gICAgcGxheWdyb3VuZDogdHJ1ZSxcbiAgICBncmFwaGlxbDogdHJ1ZSxcbn0pO1xuXG5zZXJ2ZXIuYXBwbHlNaWRkbGV3YXJlKHsgYXBwIH0pO1xuXG5hcHAuZ2V0KCcvKicsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5yZWRpcmVjdCgnL2dyYXBocWwnKVxufSlcblxuY29uc3QgbGlzdGVuID0gYXN5bmMgKCkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuQkRfSE9TVCwge1xuICAgICAgICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgICAgICAgICAgdXNlRmluZEFuZE1vZGlmeTogZmFsc2UsXG4gICAgICAgICAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcbiAgICAgICAgfSlcblxuICAgICAgICBhcHAubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGDwn5qAIFNlcnZlciByZWFkeSBhdCBodHRwOi8vbG9jYWxob3N0OiR7UE9SVH0ke3NlcnZlci5ncmFwaHFsUGF0aH1gKVxuICAgICAgICB9KVxuICAgIH0gY2F0Y2goZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJFcnJvciBSdW4gUHJvamVjdDogXCIsIGVycm9yIClcbiAgICB9XG59XG5cbmxpc3RlbigpLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS5lcnJvcihlcnIubWVzc2FnZSk7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdfQ==